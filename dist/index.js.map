{
  "version": 3,
  "sources": ["../node_modules/ms/index.js", "../node_modules/debug/src/common.js", "../node_modules/debug/src/browser.js", "../node_modules/has-flag/index.js", "../node_modules/supports-color/index.js", "../node_modules/debug/src/node.js", "../node_modules/debug/src/index.js", "../node_modules/agent-base/dist/helpers.js", "../node_modules/agent-base/dist/index.js", "../node_modules/https-proxy-agent/dist/parse-proxy-response.js", "../node_modules/https-proxy-agent/dist/index.js", "../src/index.ts", "../src/plugin.ts", "../src/character.ts", "../src/plugins/custom-openai.ts", "../src/characters/SolanaData.ts", "../src/plugins/soso-news.ts", "../src/actions/get-news.ts"],
  "sourcesContent": [
    "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n",
    "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n",
    "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n",
    "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n",
    "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n",
    "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n",
    "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n",
    "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.req = exports.json = exports.toBuffer = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nasync function toBuffer(stream) {\n    let length = 0;\n    const chunks = [];\n    for await (const chunk of stream) {\n        length += chunk.length;\n        chunks.push(chunk);\n    }\n    return Buffer.concat(chunks, length);\n}\nexports.toBuffer = toBuffer;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function json(stream) {\n    const buf = await toBuffer(stream);\n    const str = buf.toString('utf8');\n    try {\n        return JSON.parse(str);\n    }\n    catch (_err) {\n        const err = _err;\n        err.message += ` (input: ${str})`;\n        throw err;\n    }\n}\nexports.json = json;\nfunction req(url, opts = {}) {\n    const href = typeof url === 'string' ? url : url.href;\n    const req = (href.startsWith('https:') ? https : http).request(url, opts);\n    const promise = new Promise((resolve, reject) => {\n        req\n            .once('response', resolve)\n            .once('error', reject)\n            .end();\n    });\n    req.then = promise.then.bind(promise);\n    return req;\n}\nexports.req = req;\n//# sourceMappingURL=helpers.js.map",
    "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Agent = void 0;\nconst net = __importStar(require(\"net\"));\nconst http = __importStar(require(\"http\"));\nconst https_1 = require(\"https\");\n__exportStar(require(\"./helpers\"), exports);\nconst INTERNAL = Symbol('AgentBaseInternalState');\nclass Agent extends http.Agent {\n    constructor(opts) {\n        super(opts);\n        this[INTERNAL] = {};\n    }\n    /**\n     * Determine whether this is an `http` or `https` request.\n     */\n    isSecureEndpoint(options) {\n        if (options) {\n            // First check the `secureEndpoint` property explicitly, since this\n            // means that a parent `Agent` is \"passing through\" to this instance.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (typeof options.secureEndpoint === 'boolean') {\n                return options.secureEndpoint;\n            }\n            // If no explicit `secure` endpoint, check if `protocol` property is\n            // set. This will usually be the case since using a full string URL\n            // or `URL` instance should be the most common usage.\n            if (typeof options.protocol === 'string') {\n                return options.protocol === 'https:';\n            }\n        }\n        // Finally, if no `protocol` property was set, then fall back to\n        // checking the stack trace of the current call stack, and try to\n        // detect the \"https\" module.\n        const { stack } = new Error();\n        if (typeof stack !== 'string')\n            return false;\n        return stack\n            .split('\\n')\n            .some((l) => l.indexOf('(https.js:') !== -1 ||\n            l.indexOf('node:https:') !== -1);\n    }\n    // In order to support async signatures in `connect()` and Node's native\n    // connection pooling in `http.Agent`, the array of sockets for each origin\n    // has to be updated synchronously. This is so the length of the array is\n    // accurate when `addRequest()` is next called. We achieve this by creating a\n    // fake socket and adding it to `sockets[origin]` and incrementing\n    // `totalSocketCount`.\n    incrementSockets(name) {\n        // If `maxSockets` and `maxTotalSockets` are both Infinity then there is no\n        // need to create a fake socket because Node.js native connection pooling\n        // will never be invoked.\n        if (this.maxSockets === Infinity && this.maxTotalSockets === Infinity) {\n            return null;\n        }\n        // All instances of `sockets` are expected TypeScript errors. The\n        // alternative is to add it as a private property of this class but that\n        // will break TypeScript subclassing.\n        if (!this.sockets[name]) {\n            // @ts-expect-error `sockets` is readonly in `@types/node`\n            this.sockets[name] = [];\n        }\n        const fakeSocket = new net.Socket({ writable: false });\n        this.sockets[name].push(fakeSocket);\n        // @ts-expect-error `totalSocketCount` isn't defined in `@types/node`\n        this.totalSocketCount++;\n        return fakeSocket;\n    }\n    decrementSockets(name, socket) {\n        if (!this.sockets[name] || socket === null) {\n            return;\n        }\n        const sockets = this.sockets[name];\n        const index = sockets.indexOf(socket);\n        if (index !== -1) {\n            sockets.splice(index, 1);\n            // @ts-expect-error  `totalSocketCount` isn't defined in `@types/node`\n            this.totalSocketCount--;\n            if (sockets.length === 0) {\n                // @ts-expect-error `sockets` is readonly in `@types/node`\n                delete this.sockets[name];\n            }\n        }\n    }\n    // In order to properly update the socket pool, we need to call `getName()` on\n    // the core `https.Agent` if it is a secureEndpoint.\n    getName(options) {\n        const secureEndpoint = this.isSecureEndpoint(options);\n        if (secureEndpoint) {\n            // @ts-expect-error `getName()` isn't defined in `@types/node`\n            return https_1.Agent.prototype.getName.call(this, options);\n        }\n        // @ts-expect-error `getName()` isn't defined in `@types/node`\n        return super.getName(options);\n    }\n    createSocket(req, options, cb) {\n        const connectOpts = {\n            ...options,\n            secureEndpoint: this.isSecureEndpoint(options),\n        };\n        const name = this.getName(connectOpts);\n        const fakeSocket = this.incrementSockets(name);\n        Promise.resolve()\n            .then(() => this.connect(req, connectOpts))\n            .then((socket) => {\n            this.decrementSockets(name, fakeSocket);\n            if (socket instanceof http.Agent) {\n                try {\n                    // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n                    return socket.addRequest(req, connectOpts);\n                }\n                catch (err) {\n                    return cb(err);\n                }\n            }\n            this[INTERNAL].currentSocket = socket;\n            // @ts-expect-error `createSocket()` isn't defined in `@types/node`\n            super.createSocket(req, options, cb);\n        }, (err) => {\n            this.decrementSockets(name, fakeSocket);\n            cb(err);\n        });\n    }\n    createConnection() {\n        const socket = this[INTERNAL].currentSocket;\n        this[INTERNAL].currentSocket = undefined;\n        if (!socket) {\n            throw new Error('No socket was returned in the `connect()` function');\n        }\n        return socket;\n    }\n    get defaultPort() {\n        return (this[INTERNAL].defaultPort ??\n            (this.protocol === 'https:' ? 443 : 80));\n    }\n    set defaultPort(v) {\n        if (this[INTERNAL]) {\n            this[INTERNAL].defaultPort = v;\n        }\n    }\n    get protocol() {\n        return (this[INTERNAL].protocol ??\n            (this.isSecureEndpoint() ? 'https:' : 'http:'));\n    }\n    set protocol(v) {\n        if (this[INTERNAL]) {\n            this[INTERNAL].protocol = v;\n        }\n    }\n}\nexports.Agent = Agent;\n//# sourceMappingURL=index.js.map",
    "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseProxyResponse = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)('https-proxy-agent:parse-proxy-response');\nfunction parseProxyResponse(socket) {\n    return new Promise((resolve, reject) => {\n        // we need to buffer any HTTP traffic that happens with the proxy before we get\n        // the CONNECT response, so that if the response is anything other than an \"200\"\n        // response code, then we can re-play the \"data\" events on the socket once the\n        // HTTP parser is hooked up...\n        let buffersLength = 0;\n        const buffers = [];\n        function read() {\n            const b = socket.read();\n            if (b)\n                ondata(b);\n            else\n                socket.once('readable', read);\n        }\n        function cleanup() {\n            socket.removeListener('end', onend);\n            socket.removeListener('error', onerror);\n            socket.removeListener('readable', read);\n        }\n        function onend() {\n            cleanup();\n            debug('onend');\n            reject(new Error('Proxy connection ended before receiving CONNECT response'));\n        }\n        function onerror(err) {\n            cleanup();\n            debug('onerror %o', err);\n            reject(err);\n        }\n        function ondata(b) {\n            buffers.push(b);\n            buffersLength += b.length;\n            const buffered = Buffer.concat(buffers, buffersLength);\n            const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n            if (endOfHeaders === -1) {\n                // keep buffering\n                debug('have not received end of HTTP headers yet...');\n                read();\n                return;\n            }\n            const headerParts = buffered\n                .slice(0, endOfHeaders)\n                .toString('ascii')\n                .split('\\r\\n');\n            const firstLine = headerParts.shift();\n            if (!firstLine) {\n                socket.destroy();\n                return reject(new Error('No header received from proxy CONNECT response'));\n            }\n            const firstLineParts = firstLine.split(' ');\n            const statusCode = +firstLineParts[1];\n            const statusText = firstLineParts.slice(2).join(' ');\n            const headers = {};\n            for (const header of headerParts) {\n                if (!header)\n                    continue;\n                const firstColon = header.indexOf(':');\n                if (firstColon === -1) {\n                    socket.destroy();\n                    return reject(new Error(`Invalid header from proxy CONNECT response: \"${header}\"`));\n                }\n                const key = header.slice(0, firstColon).toLowerCase();\n                const value = header.slice(firstColon + 1).trimStart();\n                const current = headers[key];\n                if (typeof current === 'string') {\n                    headers[key] = [current, value];\n                }\n                else if (Array.isArray(current)) {\n                    current.push(value);\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n            debug('got proxy server response: %o %o', firstLine, headers);\n            cleanup();\n            resolve({\n                connect: {\n                    statusCode,\n                    statusText,\n                    headers,\n                },\n                buffered,\n            });\n        }\n        socket.on('error', onerror);\n        socket.on('end', onend);\n        read();\n    });\n}\nexports.parseProxyResponse = parseProxyResponse;\n//# sourceMappingURL=parse-proxy-response.js.map",
    "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpsProxyAgent = void 0;\nconst net = __importStar(require(\"net\"));\nconst tls = __importStar(require(\"tls\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst agent_base_1 = require(\"agent-base\");\nconst url_1 = require(\"url\");\nconst parse_proxy_response_1 = require(\"./parse-proxy-response\");\nconst debug = (0, debug_1.default)('https-proxy-agent');\nconst setServernameFromNonIpHost = (options) => {\n    if (options.servername === undefined &&\n        options.host &&\n        !net.isIP(options.host)) {\n        return {\n            ...options,\n            servername: options.host,\n        };\n    }\n    return options;\n};\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\nclass HttpsProxyAgent extends agent_base_1.Agent {\n    constructor(proxy, opts) {\n        super(opts);\n        this.options = { path: undefined };\n        this.proxy = typeof proxy === 'string' ? new url_1.URL(proxy) : proxy;\n        this.proxyHeaders = opts?.headers ?? {};\n        debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href);\n        // Trim off the brackets from IPv6 addresses\n        const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n        const port = this.proxy.port\n            ? parseInt(this.proxy.port, 10)\n            : this.proxy.protocol === 'https:'\n                ? 443\n                : 80;\n        this.connectOpts = {\n            // Attempt to negotiate http/1.1 for proxy servers that support http/2\n            ALPNProtocols: ['http/1.1'],\n            ...(opts ? omit(opts, 'headers') : null),\n            host,\n            port,\n        };\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     */\n    async connect(req, opts) {\n        const { proxy } = this;\n        if (!opts.host) {\n            throw new TypeError('No \"host\" provided');\n        }\n        // Create a socket connection to the proxy server.\n        let socket;\n        if (proxy.protocol === 'https:') {\n            debug('Creating `tls.Socket`: %o', this.connectOpts);\n            socket = tls.connect(setServernameFromNonIpHost(this.connectOpts));\n        }\n        else {\n            debug('Creating `net.Socket`: %o', this.connectOpts);\n            socket = net.connect(this.connectOpts);\n        }\n        const headers = typeof this.proxyHeaders === 'function'\n            ? this.proxyHeaders()\n            : { ...this.proxyHeaders };\n        const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n        let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`;\n        // Inject the `Proxy-Authorization` header if necessary.\n        if (proxy.username || proxy.password) {\n            const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n            headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n        }\n        headers.Host = `${host}:${opts.port}`;\n        if (!headers['Proxy-Connection']) {\n            headers['Proxy-Connection'] = this.keepAlive\n                ? 'Keep-Alive'\n                : 'close';\n        }\n        for (const name of Object.keys(headers)) {\n            payload += `${name}: ${headers[name]}\\r\\n`;\n        }\n        const proxyResponsePromise = (0, parse_proxy_response_1.parseProxyResponse)(socket);\n        socket.write(`${payload}\\r\\n`);\n        const { connect, buffered } = await proxyResponsePromise;\n        req.emit('proxyConnect', connect);\n        this.emit('proxyConnect', connect, req);\n        if (connect.statusCode === 200) {\n            req.once('socket', resume);\n            if (opts.secureEndpoint) {\n                // The proxy is connecting to a TLS server, so upgrade\n                // this socket connection to a TLS connection.\n                debug('Upgrading socket connection to TLS');\n                return tls.connect({\n                    ...omit(setServernameFromNonIpHost(opts), 'host', 'path', 'port'),\n                    socket,\n                });\n            }\n            return socket;\n        }\n        // Some other status code that's not 200... need to re-play the HTTP\n        // header \"data\" events onto the socket once the HTTP machinery is\n        // attached so that the node core `http` can parse and handle the\n        // error status code.\n        // Close the original socket, and a new \"fake\" socket is returned\n        // instead, so that the proxy doesn't get the HTTP request\n        // written to it (which may contain `Authorization` headers or other\n        // sensitive data).\n        //\n        // See: https://hackerone.com/reports/541502\n        socket.destroy();\n        const fakeSocket = new net.Socket({ writable: false });\n        fakeSocket.readable = true;\n        // Need to wait for the \"socket\" event to re-play the \"data\" events.\n        req.once('socket', (s) => {\n            debug('Replaying proxy buffer for failed request');\n            (0, assert_1.default)(s.listenerCount('data') > 0);\n            // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n            // this point the HTTP module machinery has been hooked up for\n            // the user.\n            s.push(buffered);\n            s.push(null);\n        });\n        return fakeSocket;\n    }\n}\nHttpsProxyAgent.protocols = ['http', 'https'];\nexports.HttpsProxyAgent = HttpsProxyAgent;\nfunction resume(socket) {\n    socket.resume();\n}\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=index.js.map",
    "import { logger, type IAgentRuntime, type Project, type ProjectAgent } from '@elizaos/core';\nimport starterPlugin from './plugin.ts';\nimport { character } from './character.ts';\n// Import custom OpenAI plugin\nimport customOpenAIPlugin from './plugins/custom-openai.ts';\n// Import SolanaData character\nimport { solanaDataCharacter } from './characters/SolanaData.ts';\n// Import SoSoValue news plugin\nimport sosoNewsPlugin from './plugins/soso-news.ts';\n\nconst initCharacter = ({ runtime }: { runtime: IAgentRuntime }) => {\n  logger.info('Initializing character');\n  logger.info({ name: character.name }, 'Name:');\n};\n\nconst initSolanaDataCharacter = ({ runtime }: { runtime: IAgentRuntime }) => {\n  logger.info('Initializing SolanaData character');\n  logger.info({ name: solanaDataCharacter.name }, 'Name:');\n};\n\nexport const projectAgent: ProjectAgent = {\n  character,\n  init: async (runtime: IAgentRuntime) => await initCharacter({ runtime }),\n  plugins: [starterPlugin, customOpenAIPlugin], // Import custom plugins here\n};\n\nexport const solanaDataAgent: ProjectAgent = {\n  character: solanaDataCharacter,\n  init: async (runtime: IAgentRuntime) => await initSolanaDataCharacter({ runtime }),\n  plugins: [starterPlugin, customOpenAIPlugin, sosoNewsPlugin],\n};\n\nconst project: Project = {\n  agents: [projectAgent, solanaDataAgent],\n};\n\nexport { character } from './character.ts';\nexport { solanaDataCharacter } from './characters/SolanaData.ts';\n\nexport default project;\n",
    "import type { Plugin } from '@elizaos/core';\nimport {\n  type Action,\n  type ActionResult,\n  type Content,\n  type GenerateTextParams,\n  type HandlerCallback,\n  type IAgentRuntime,\n  type Memory,\n  ModelType,\n  type Provider,\n  type ProviderResult,\n  Service,\n  type State,\n  logger,\n} from '@elizaos/core';\nimport { z } from 'zod';\n\n/**\n * Define the configuration schema for the plugin with the following properties:\n *\n * @param {string} EXAMPLE_PLUGIN_VARIABLE - The name of the plugin (min length of 1, optional)\n * @returns {object} - The configured schema object\n */\nconst configSchema = z.object({\n  EXAMPLE_PLUGIN_VARIABLE: z\n    .string()\n    .min(1, 'Example plugin variable is not provided')\n    .optional()\n    .transform((val) => {\n      if (!val) {\n        console.warn('Warning: Example plugin variable is not provided');\n      }\n      return val;\n    }),\n});\n\n/**\n * Example HelloWorld action\n * This demonstrates the simplest possible action structure\n */\n/**\n * Represents an action that responds with a simple hello world message.\n *\n * @typedef {Object} Action\n * @property {string} name - The name of the action\n * @property {string[]} similes - The related similes of the action\n * @property {string} description - Description of the action\n * @property {Function} validate - Validation function for the action\n * @property {Function} handler - The function that handles the action\n * @property {Object[]} examples - Array of examples for the action\n */\nconst helloWorldAction: Action = {\n  name: 'HELLO_WORLD',\n  similes: ['GREET', 'SAY_HELLO'],\n  description: 'Responds with a simple hello world message',\n\n  validate: async (_runtime: IAgentRuntime, _message: Memory, _state: State): Promise<boolean> => {\n    // Always valid\n    return true;\n  },\n\n  handler: async (\n    _runtime: IAgentRuntime,\n    message: Memory,\n    _state: State,\n    _options: any,\n    callback: HandlerCallback,\n    _responses: Memory[]\n  ): Promise<ActionResult> => {\n    try {\n      logger.info('Handling HELLO_WORLD action');\n\n      // Simple response content\n      const responseContent: Content = {\n        text: 'hello world!',\n        actions: ['HELLO_WORLD'],\n        source: message.content.source,\n      };\n\n      // Call back with the hello world message\n      await callback(responseContent);\n\n      return {\n        text: 'Sent hello world greeting',\n        values: {\n          success: true,\n          greeted: true,\n        },\n        data: {\n          actionName: 'HELLO_WORLD',\n          messageId: message.id,\n          timestamp: Date.now(),\n        },\n        success: true,\n      };\n    } catch (error) {\n      logger.error({ error }, 'Error in HELLO_WORLD action:');\n\n      return {\n        text: 'Failed to send hello world greeting',\n        values: {\n          success: false,\n          error: 'GREETING_FAILED',\n        },\n        data: {\n          actionName: 'HELLO_WORLD',\n          error: error instanceof Error ? error.message : String(error),\n        },\n        success: false,\n        error: error instanceof Error ? error : new Error(String(error)),\n      };\n    }\n  },\n\n  examples: [\n    [\n      {\n        name: '{{name1}}',\n        content: {\n          text: 'Can you say hello?',\n        },\n      },\n      {\n        name: '{{name2}}',\n        content: {\n          text: 'hello world!',\n          actions: ['HELLO_WORLD'],\n        },\n      },\n    ],\n  ],\n};\n\n/**\n * Example Hello World Provider\n * This demonstrates the simplest possible provider implementation\n */\nconst helloWorldProvider: Provider = {\n  name: 'HELLO_WORLD_PROVIDER',\n  description: 'A simple example provider',\n\n  get: async (\n    _runtime: IAgentRuntime,\n    _message: Memory,\n    _state: State\n  ): Promise<ProviderResult> => {\n    return {\n      text: 'I am a provider',\n      values: {},\n      data: {},\n    };\n  },\n};\n\nexport class StarterService extends Service {\n  static serviceType = 'starter';\n  capabilityDescription =\n    'This is a starter service which is attached to the agent through the starter plugin.';\n\n  constructor(runtime: IAgentRuntime) {\n    super(runtime);\n  }\n\n  static async start(runtime: IAgentRuntime) {\n    logger.info('*** Starting starter service ***');\n    const service = new StarterService(runtime);\n    return service;\n  }\n\n  static async stop(runtime: IAgentRuntime) {\n    logger.info('*** Stopping starter service ***');\n    // get the service from the runtime\n    const service = runtime.getService(StarterService.serviceType);\n    if (!service) {\n      throw new Error('Starter service not found');\n    }\n    service.stop();\n  }\n\n  async stop() {\n    logger.info('*** Stopping starter service instance ***');\n  }\n}\n\nconst plugin: Plugin = {\n  name: 'starter',\n  description: 'A starter plugin for Eliza',\n  // Set lowest priority so real models take precedence\n  priority: -1000,\n  config: {\n    EXAMPLE_PLUGIN_VARIABLE: process.env.EXAMPLE_PLUGIN_VARIABLE,\n  },\n  async init(config: Record<string, string>) {\n    logger.info('*** Initializing starter plugin ***');\n    try {\n      const validatedConfig = await configSchema.parseAsync(config);\n\n      // Set all environment variables at once\n      for (const [key, value] of Object.entries(validatedConfig)) {\n        if (value) process.env[key] = value;\n      }\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const errorMessages =\n          error.issues?.map((e) => e.message)?.join(', ') || 'Unknown validation error';\n        throw new Error(`Invalid plugin configuration: ${errorMessages}`);\n      }\n      throw new Error(\n        `Invalid plugin configuration: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  },\n  // 移除模型实现，让自定义 OpenAI 插件处理模型\n  // models: {\n  //   [ModelType.TEXT_SMALL]: async (\n  //     _runtime,\n  //     { prompt, stopSequences = [] }: GenerateTextParams\n  //   ) => {\n  //     return 'Never gonna give you up, never gonna let you down, never gonna run around and desert you...';\n  //   },\n  //   [ModelType.TEXT_LARGE]: async (\n  //     _runtime,\n  //     {\n  //       prompt,\n  //       stopSequences = [],\n  //       maxTokens = 8192,\n  //       temperature = 0.7,\n  //       frequencyPenalty = 0.7,\n  //       presencePenalty = 0.7,\n  //     }: GenerateTextParams\n  //   ) => {\n  //     return 'Never gonna make you cry, never gonna say goodbye, never gonna tell a lie and hurt you...';\n  //   },\n  // },\n  routes: [\n    {\n      name: 'helloworld',\n      path: '/helloworld',\n      type: 'GET',\n      handler: async (_req: any, res: any) => {\n        // send a response\n        res.json({\n          message: 'Hello World!',\n        });\n      },\n    },\n  ],\n  events: {\n    MESSAGE_RECEIVED: [\n      async (params) => {\n        logger.info('MESSAGE_RECEIVED event received');\n        // print the keys\n        logger.info({ keys: Object.keys(params) }, 'MESSAGE_RECEIVED param keys');\n      },\n    ],\n    VOICE_MESSAGE_RECEIVED: [\n      async (params) => {\n        logger.info('VOICE_MESSAGE_RECEIVED event received');\n        // print the keys\n        logger.info({ keys: Object.keys(params) }, 'VOICE_MESSAGE_RECEIVED param keys');\n      },\n    ],\n    WORLD_CONNECTED: [\n      async (params) => {\n        logger.info('WORLD_CONNECTED event received');\n        // print the keys\n        logger.info({ keys: Object.keys(params) }, 'WORLD_CONNECTED param keys');\n      },\n    ],\n    WORLD_JOINED: [\n      async (params) => {\n        logger.info('WORLD_JOINED event received');\n        // print the keys\n        logger.info({ keys: Object.keys(params) }, 'WORLD_JOINED param keys');\n      },\n    ],\n  },\n  services: [StarterService],\n  actions: [helloWorldAction],\n  providers: [helloWorldProvider],\n};\n\nexport default plugin;\n",
    "import { type Character } from '@elizaos/core';\n\n/**\n * Represents the default character (Eliza) with her specific attributes and behaviors.\n * Eliza responds to a wide range of messages, is helpful and conversational.\n * She interacts with users in a concise, direct, and helpful manner, using humor and empathy effectively.\n * Eliza's responses are geared towards providing assistance on various topics while maintaining a friendly demeanor.\n *\n * Note: This character does not have a pre-defined ID. The loader will generate one.\n * If you want a stable agent across restarts, add an \"id\" field with a specific UUID.\n */\nexport const character: Character = {\n  name: 'Eliza',\n  plugins: [\n    // Core plugins first\n    '@elizaos/plugin-sql',\n\n    // Text-only plugins (no embedding support)\n    ...(process.env.ANTHROPIC_API_KEY?.trim() ? ['@elizaos/plugin-anthropic'] : []),\n    ...(process.env.OPENROUTER_API_KEY?.trim() ? ['@elizaos/plugin-openrouter'] : []),\n\n    // Custom OpenAI plugin (replaces @elizaos/plugin-openai)\n    // 已在 src/index.ts 中直接注册，无需在此处引用\n    // ...(process.env.OPENAI_API_KEY?.trim() ? ['./plugins/custom-openai'] : []),\n    ...(process.env.GOOGLE_GENERATIVE_AI_API_KEY?.trim() ? ['@elizaos/plugin-google-genai'] : []),\n\n    // Ollama as fallback (only if no main LLM providers are configured)\n    ...(process.env.OLLAMA_API_ENDPOINT?.trim() ? ['@elizaos/plugin-ollama'] : []),\n\n    // Platform plugins\n    ...(process.env.DISCORD_API_TOKEN?.trim() ? ['@elizaos/plugin-discord'] : []),\n    ...(process.env.TWITTER_API_KEY?.trim() &&\n    process.env.TWITTER_API_SECRET_KEY?.trim() &&\n    process.env.TWITTER_ACCESS_TOKEN?.trim() &&\n    process.env.TWITTER_ACCESS_TOKEN_SECRET?.trim()\n      ? ['@elizaos/plugin-twitter']\n      : []),\n    ...(process.env.TELEGRAM_BOT_TOKEN?.trim() ? ['@elizaos/plugin-telegram'] : []),\n\n    // Bootstrap plugin\n    ...(!process.env.IGNORE_BOOTSTRAP ? ['@elizaos/plugin-bootstrap'] : []),\n  ],\n  settings: {\n    secrets: {},\n    avatar: 'https://elizaos.github.io/eliza-avatars/Eliza/portrait.png',\n  },\n  system:\n    'Respond to all messages in a helpful, conversational manner. Provide assistance on a wide range of topics, using knowledge when needed. Be concise but thorough, friendly but professional. Use humor when appropriate and be empathetic to user needs. Provide valuable information and insights when questions are asked.',\n  bio: [\n    'Engages with all types of questions and conversations',\n    'Provides helpful, concise responses',\n    'Uses knowledge resources effectively when needed',\n    'Balances brevity with completeness',\n    'Uses humor and empathy appropriately',\n    'Adapts tone to match the conversation context',\n    'Offers assistance proactively',\n    'Communicates clearly and directly',\n  ],\n  topics: [\n    'general knowledge and information',\n    'problem solving and troubleshooting',\n    'technology and software',\n    'community building and management',\n    'business and productivity',\n    'creativity and innovation',\n    'personal development',\n    'communication and collaboration',\n    'education and learning',\n    'entertainment and media',\n  ],\n  messageExamples: [\n    [\n      {\n        name: '{{name1}}',\n        content: {\n          text: 'This user keeps derailing technical discussions with personal problems.',\n        },\n      },\n      {\n        name: 'Eliza',\n        content: {\n          text: 'DM them. Sounds like they need to talk about something else.',\n        },\n      },\n      {\n        name: '{{name1}}',\n        content: {\n          text: 'I tried, they just keep bringing drama back to the main channel.',\n        },\n      },\n      {\n        name: 'Eliza',\n        content: {\n          text: \"Send them my way. I've got time today.\",\n        },\n      },\n    ],\n    [\n      {\n        name: '{{name1}}',\n        content: {\n          text: \"I can't handle being a mod anymore. It's affecting my mental health.\",\n        },\n      },\n      {\n        name: 'Eliza',\n        content: {\n          text: 'Drop the channels. You come first.',\n        },\n      },\n      {\n        name: '{{name1}}',\n        content: {\n          text: \"But who's going to handle everything?\",\n        },\n      },\n      {\n        name: 'Eliza',\n        content: {\n          text: \"We will. Take the break. Come back when you're ready.\",\n        },\n      },\n    ],\n  ],\n  style: {\n    all: [\n      'Keep responses concise but informative',\n      'Use clear and direct language',\n      'Be engaging and conversational',\n      'Use humor when appropriate',\n      'Be empathetic and understanding',\n      'Provide helpful information',\n      'Be encouraging and positive',\n      'Adapt tone to the conversation',\n      'Use knowledge resources when needed',\n      'Respond to all types of questions',\n    ],\n    chat: [\n      'Be conversational and natural',\n      'Engage with the topic at hand',\n      'Be helpful and informative',\n      'Show personality and warmth',\n    ],\n  },\n};\n",
    "import {\n  Plugin,\n  ModelType,\n  logger,\n  EventType\n} from '@elizaos/core';\n\n// 获取环境变量或默认值\nfunction getSetting(runtime: any, key: string, defaultValue?: string): string | undefined {\n  const value = runtime.getSetting(key) ?? process.env[key] ?? defaultValue;\n  return value ? String(value) : undefined;\n}\n\n// 获取基础URL\nfunction getBaseURL(runtime: any): string {\n  const baseURL = getSetting(runtime, \"OPENAI_BASE_URL\", \"https://api.openai.com/v1\");\n  logger.debug(`[CustomOpenAI] Using base URL: ${baseURL}`);\n  return baseURL;\n}\n\n// 获取API密钥\nfunction getApiKey(runtime: any): string | undefined {\n  return getSetting(runtime, \"OPENAI_API_KEY\");\n}\n\n// 获取小模型名称\nfunction getSmallModel(runtime: any): string {\n  return getSetting(runtime, \"OPENAI_SMALL_MODEL\") ?? getSetting(runtime, \"SMALL_MODEL\", \"gpt-5-nano\") ?? \"gpt-5-nano\";\n}\n\n// 获取大模型名称\nfunction getLargeModel(runtime: any): string {\n  return getSetting(runtime, \"OPENAI_LARGE_MODEL\") ?? getSetting(runtime, \"LARGE_MODEL\", \"gpt-5-mini\") ?? \"gpt-5-mini\";\n}\n\n// 发送使用事件\nfunction emitModelUsageEvent(runtime: any, type: typeof ModelType[keyof typeof ModelType], prompt: string, usage: any) {\n  runtime.emitEvent(EventType.MODEL_USED, {\n    provider: \"openai\",\n    type,\n    prompt,\n    tokens: {\n      prompt: usage.prompt_tokens,\n      completion: usage.completion_tokens,\n      total: usage.total_tokens\n    }\n  });\n}\n\n// 生成对象的通用函数\nasync function generateObjectByModelType(\n  runtime: any,\n  params: any,\n  modelType: typeof ModelType[keyof typeof ModelType],\n  getModelFn: (runtime: any) => string\n) {\n  const modelName = getModelFn(runtime);\n  const baseURL = getBaseURL(runtime);\n  const apiKey = getApiKey(runtime);\n\n  logger.log(`[CustomOpenAI] Using ${modelType} model: ${modelName}`);\n\n  const temperature = params.temperature ?? 0;\n\n  try {\n    const response = await fetch(`${baseURL}/chat/completions`, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${apiKey}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        model: modelName,\n        messages: [{ role: \"user\", content: params.prompt }],\n        temperature,\n        max_tokens: 4096,\n        response_format: { type: \"json_object\" }\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.status} - ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    const object = JSON.parse(data.choices[0].message.content);\n    const usage = data.usage;\n\n    if (usage) {\n      emitModelUsageEvent(runtime, modelType, params.prompt, usage);\n    }\n\n    return object;\n  } catch (error) {\n    const message = error instanceof Error ? error.message : String(error);\n    logger.error(`[CustomOpenAI] Error in generateObjectByModelType: ${message}`);\n    throw error;\n  }\n}\n\n// 自定义 OpenAI 插件实现\nconst customOpenAIPlugin: Plugin = {\n  name: \"custom-openai\",\n  description: \"Custom OpenAI plugin with fixed API endpoints\",\n  config: {\n    OPENAI_API_KEY: process.env.OPENAI_API_KEY,\n    OPENAI_BASE_URL: process.env.OPENAI_BASE_URL,\n    OPENAI_SMALL_MODEL: process.env.OPENAI_SMALL_MODEL,\n    OPENAI_LARGE_MODEL: process.env.OPENAI_LARGE_MODEL,\n    SMALL_MODEL: process.env.SMALL_MODEL,\n    LARGE_MODEL: process.env.LARGE_MODEL,\n  },\n  async init(_config, runtime) {\n    logger.log(\"Custom OpenAI plugin initialized\");\n\n    // 验证API密钥\n    try {\n      const apiKey = getApiKey(runtime);\n      if (!apiKey) {\n        logger.warn(\"OPENAI_API_KEY is not set - OpenAI functionality will be limited\");\n        return;\n      }\n\n      const baseURL = getBaseURL(runtime);\n      const response = await fetch(`${baseURL}/models`, {\n        headers: {\n          \"Authorization\": `Bearer ${apiKey}`\n        }\n      });\n\n      if (!response.ok) {\n        logger.warn(`OpenAI API key validation failed: ${response.statusText}`);\n        logger.warn(\"OpenAI functionality will be limited until a valid API key is provided\");\n      } else {\n        logger.log(\"OpenAI API key validated successfully\");\n      }\n    } catch (error) {\n      const message = error instanceof Error ? error.message : String(error);\n      logger.warn(`Error validating OpenAI API key: ${message}`);\n      logger.warn(\"OpenAI functionality will be limited until a valid API key is provided\");\n    }\n  },\n  models: {\n    // 小文本模型\n    [ModelType.TEXT_SMALL]: async (runtime, params) => {\n      const modelName = getSmallModel(runtime);\n      const baseURL = getBaseURL(runtime);\n      const apiKey = getApiKey(runtime);\n\n      logger.log(`[CustomOpenAI] Using TEXT_SMALL model: ${modelName}`);\n\n      const {\n        prompt,\n        stopSequences = [],\n        maxTokens = 8192,\n        temperature = 0.7,\n        frequencyPenalty = 0.7,\n        presencePenalty = 0.7\n      } = params;\n\n      const response = await fetch(`${baseURL}/chat/completions`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${apiKey}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          model: modelName,\n          messages: [\n            ...(runtime.character?.system ? [{ role: \"system\", content: runtime.character.system }] : []),\n            { role: \"user\", content: prompt }\n          ],\n          temperature,\n          max_tokens: maxTokens,\n          frequency_penalty: frequencyPenalty,\n          presence_penalty: presencePenalty,\n          stop: stopSequences.length > 0 ? stopSequences : undefined\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`OpenAI API error: ${response.status} - ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const openaiResponse = data.choices[0]?.message?.content || \"\";\n      const usage = data.usage;\n\n      if (usage) {\n        emitModelUsageEvent(runtime, ModelType.TEXT_SMALL, prompt, usage);\n      }\n\n      return openaiResponse;\n    },\n\n    // 大文本模型\n    [ModelType.TEXT_LARGE]: async (runtime, params) => {\n      const modelName = getLargeModel(runtime);\n      const baseURL = getBaseURL(runtime);\n      const apiKey = getApiKey(runtime);\n\n      logger.log(`[CustomOpenAI] Using TEXT_LARGE model: ${modelName}`);\n\n      const {\n        prompt,\n        stopSequences = [],\n        maxTokens = 8192,\n        temperature = 0.7,\n        frequencyPenalty = 0.7,\n        presencePenalty = 0.7\n      } = params;\n\n      const response = await fetch(`${baseURL}/chat/completions`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${apiKey}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          model: modelName,\n          messages: [\n            ...(runtime.character?.system ? [{ role: \"system\", content: runtime.character.system }] : []),\n            { role: \"user\", content: prompt }\n          ],\n          temperature,\n          max_tokens: maxTokens,\n          frequency_penalty: frequencyPenalty,\n          presence_penalty: presencePenalty,\n          stop: stopSequences.length > 0 ? stopSequences : undefined\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`OpenAI API error: ${response.status} - ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const openaiResponse = data.choices[0]?.message?.content || \"\";\n      const usage = data.usage;\n\n      if (usage) {\n        emitModelUsageEvent(runtime, ModelType.TEXT_LARGE, prompt, usage);\n      }\n\n      return openaiResponse;\n    },\n\n    // 小对象模型\n    [ModelType.OBJECT_SMALL]: async (runtime, params) => {\n      return generateObjectByModelType(runtime, params, ModelType.OBJECT_SMALL, getSmallModel);\n    },\n\n    // 大对象模型\n    [ModelType.OBJECT_LARGE]: async (runtime, params) => {\n      return generateObjectByModelType(runtime, params, ModelType.OBJECT_LARGE, getLargeModel);\n    },\n\n    // 嵌入模型\n    [ModelType.TEXT_EMBEDDING]: async (runtime, params) => {\n      const embeddingModelName = getSetting(runtime, \"OPENAI_EMBEDDING_MODEL\", \"text-embedding-3-small\") ?? \"text-embedding-3-small\";\n      const baseURL = getBaseURL(runtime);\n      const apiKey = getApiKey(runtime);\n\n      let text: string;\n      if (params == null) {\n        // 当参数为 null 或 undefined 时，提供默认值\n        text = \"default text for embedding initialization\";\n      } else if (typeof params === \"string\") {\n        text = params;\n      } else if (typeof params === \"object\" && params.text) {\n        text = params.text;\n      } else {\n        // 如果没有找到有效的文本，使用默认值\n        text = \"default text\";\n      }\n\n      try {\n        const response = await fetch(`${baseURL}/embeddings`, {\n          method: \"POST\",\n          headers: {\n            \"Authorization\": `Bearer ${apiKey}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            model: embeddingModelName,\n            input: text\n          })\n        });\n\n        if (!response.ok) {\n          // 如果嵌入模型不可用，返回一个模拟的嵌入向量\n          logger.warn(`[CustomOpenAI] Embedding model not available, returning mock embedding: ${response.status} - ${response.statusText}`);\n          // 返回一个1536维的零向量（OpenAI Ada模型的标准维度）\n          return new Array(1536).fill(0);\n        }\n\n        const data = await response.json();\n        const embedding = data.data[0].embedding;\n        const usage = data.usage;\n\n        if (usage) {\n          emitModelUsageEvent(runtime, ModelType.TEXT_EMBEDDING, text, usage);\n        }\n\n        return embedding;\n      } catch (error) {\n        const message = error instanceof Error ? error.message : String(error);\n        logger.error(`[CustomOpenAI] Error in TEXT_EMBEDDING: ${message}`);\n        // 如果出现错误，返回一个模拟的嵌入向量\n        logger.warn(`[CustomOpenAI] Returning mock embedding due to error`);\n        return new Array(1536).fill(0);\n      }\n    }\n  },\n  tests: [\n    {\n      name: \"custom_openai_plugin_tests\",\n      tests: [\n        {\n          name: \"custom_openai_test_text_small\",\n          fn: async (runtime) => {\n            try {\n              const text = await runtime.useModel(ModelType.TEXT_SMALL, {\n                prompt: \"What is the nature of reality in 10 words?\"\n              });\n              if (text.length === 0) {\n                throw new Error(\"Failed to generate text\");\n              }\n              logger.log({ text }, \"generated with custom_openai_test_text_small\");\n            } catch (error) {\n              const message = error instanceof Error ? error.message : String(error);\n              logger.error(`Error in custom_openai_test_text_small: ${message}`);\n              throw error;\n            }\n          }\n        }\n      ]\n    }\n  ]\n};\n\nexport default customOpenAIPlugin;",
    "import { type Character } from \"@elizaos/core\";\n\n/**\n * SolanaData Agent - 专门用于查询Solana区块链数据的AI助手\n *\n * 这个角色专注于根据用户提及的Solana代币或地址来查询各种区块链数据，\n * 包括代币信息、交易历史、账户余额等。\n */\nexport const solanaDataCharacter: Character = {\n  name: \"SolanaData\",\n  plugins: [\n    // Core plugins first\n    \"@elizaos/plugin-sql\",\n\n    // Custom OpenAI plugin (replaces @elizaos/plugin-openai)\n    // 已在 src/index.ts 中直接注册，无需在此处引用\n    // SoSoValue news plugin is also registered in src/index.ts\n\n    // Platform plugins\n    ...(process.env.DISCORD_API_TOKEN?.trim()\n      ? [\"@elizaos/plugin-discord\"]\n      : []),\n    ...(process.env.TWITTER_API_KEY?.trim() &&\n    process.env.TWITTER_API_SECRET_KEY?.trim() &&\n    process.env.TWITTER_ACCESS_TOKEN?.trim() &&\n    process.env.TWITTER_ACCESS_TOKEN_SECRET?.trim()\n      ? [\"@elizaos/plugin-twitter\"]\n      : []),\n    ...(process.env.TELEGRAM_BOT_TOKEN?.trim()\n      ? [\"@elizaos/plugin-telegram\"]\n      : []),\n\n    // Bootstrap plugin\n    ...(!process.env.IGNORE_BOOTSTRAP ? [\"@elizaos/plugin-bootstrap\"] : []),\n  ],\n  settings: {\n    secrets: {\n      SOSO_API_KEY: process.env.SOSO_API_KEY,\n      SOSO_BASE_URL: process.env.SOSO_BASE_URL || \"https://openapi.sosovalue.com\",\n    },\n    avatar: \"https://elizaos.github.io/eliza-avatars/SolanaData/portrait.png\",\n  },\n  system:\n    'You are SolanaData, a Solana blockchain data expert. Always respond with proper XML structure containing <thought> and <actions> tags. Provide helpful, conversational responses about Solana blockchain topics including token information, account analysis, and technical concepts. Be concise, professional, and accurate. You can search for cryptocurrency information and get latest news using SoSoValue API - support queries like \"Bitcoin news\", \"ETH latest updates\", \"SOL token ID\", etc. For general questions about your capabilities, respond clearly about your Solana expertise and available plugins including news查询功能.',\n  bio: [\n    \"Solana blockchain data expert\",\n    \"Specializes in token and address information queries\",\n    \"Provides real-time on-chain data analysis\",\n    \"Explains Solana technical concepts\",\n    \"Helps users understand on-chain activities\",\n    \"Verifies addresses and transaction information\",\n    \"Cryptocurrency news and market insights provider\",\n    \"Real-time token information and news aggregator\",\n  ],\n  topics: [\n    \"solana blockchain\",\n    \"token information\",\n    \"account balances\",\n    \"transaction history\",\n    \"smart contracts\",\n    \"program accounts\",\n    \"price data\",\n    \"supply information\",\n    \"holder analysis\",\n    \"pda explanation\",\n    \"rent and fees\",\n    \"cpi calls\",\n    \"solana ecosystem\",\n    \"cryptocurrency news\",\n    \"market analysis\",\n    \"token insights\",\n    \"blockchain updates\",\n    \"defi trends\",\n  ],\n  messageExamples: [\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"What plugins do you have?\",\n        },\n      },\n      {\n        name: \"SolanaData\",\n        content: {\n          text: \"I'm SolanaData, equipped with SQL database for data storage, custom OpenAI plugin for language processing, and news plugin for latest information. These enable me to provide professional Solana blockchain data analysis services.\",\n        },\n      },\n    ],\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"Can you help me check token information? C98\",\n        },\n      },\n      {\n        name: \"SolanaData\",\n        content: {\n          text: \"Of course! C98 is Coin98 Token, the native token of the Coin98 ecosystem. Let me query the latest token information including price, total supply, and market data.\",\n        },\n      },\n    ],\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"What is the balance of this address? 8hoBHQhbknrK8D4g7hGGN3wHnG9WJKB6XMTnS3Q3XV9L\",\n        },\n      },\n      {\n        name: \"SolanaData\",\n        content: {\n          text: \"Querying balance information for address 8hoBHQhbknrK8D4g7hGGN3wHnG9WJKB6XMTnS3Q3XV9L. Please wait... [Query result] This address currently holds 1,250.5 SOL and other tokens.\",\n        },\n      },\n    ],\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"Bitcoin 有什么最新新闻？\",\n        },\n      },\n      {\n        name: \"SolanaData\",\n        content: {\n          text: \"📈 Bitcoin (BTC) 最新资讯：\\n\\n1. **比特币ETF获批**\\n   📅 2024-10-25 | 📁 新闻\\n   👤 Reuters\\n   🏷️ ETF, SEC, 批准\\n   🔗 [查看原文](https://example.com)\\n\\n2. **机构持续买入**\\n   📅 2024-10-24 | 📁 市场洞察\\n   👤 Bloomberg\\n   🔗 [查看原文](https://example.com)\",\n          actions: [\"GET_TOKEN_NEWS\"],\n        },\n      },\n    ],\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"查一下 SOL 的代币ID\",\n        },\n      },\n      {\n        name: \"SolanaData\",\n        content: {\n          text: \"💎 代币信息：\\n**Solana** (SOL)\\n🆔 ID: 1673723677362319870\",\n          actions: [\"SEARCH_TOKEN_ID\"],\n        },\n      },\n    ],\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"ETH 最近怎么样？\",\n        },\n      },\n      {\n        name: \"SolanaData\",\n        content: {\n          text: \"📈 Ethereum (ETH) 最新资讯：\\n\\n1. **以太坊2.0升级进展**\\n   📅 2024-10-25 | 📁 技术更新\\n   👤 Ethereum Foundation\\n   🔗 [查看原文](https://example.com)\",\n          actions: [\"GET_TOKEN_NEWS\"],\n        },\n      },\n    ],\n  ],\n  style: {\n    all: [\n      \"Maintain professional and friendly tone\",\n      \"Use accurate technical terminology\",\n      \"Provide detailed on-chain data\",\n      \"Keep explanations concise when explaining complex concepts\",\n      \"Provide context when appropriate\",\n      \"Verify address format correctness\",\n      \"Remind users about security considerations\",\n    ],\n    chat: [\n      \"Focus on Solana blockchain queries\",\n      \"Provide real-time and accurate data\",\n      \"Display query results clearly\",\n      \"Keep technical explanations simple\",\n    ],\n  },\n};\n",
    "import { type Plugin, logger } from \"@elizaos/core\";\nimport { sosoNewsActions } from \"../actions/get-news\";\n\n/**\n * SoSoValue News Plugin - 包装 SoSoValue 新闻查询 Action\n */\nexport const sosoNewsPlugin: Plugin = {\n  name: \"soso-news-plugin\",\n  description: \"SoSoValue API integration for cryptocurrency news and token information\",\n\n  async init(config: Record<string, string>) {\n    logger.info(\"Initializing SoSoValue news plugin\");\n\n    // 检查必要的环境变量\n    if (!config.SOSO_API_KEY) {\n      logger.warn(\"SOSO_API_KEY not configured - SoSoValue actions will not work\");\n    } else {\n      logger.info(\"SoSoValue API key configured successfully\");\n    }\n  },\n\n  // 不提供 routes、events、services，只提供 actions\n  routes: [],\n  events: {},\n  services: [],\n\n  // 核心：提供 SoSoValue 新闻查询 Actions\n  actions: sosoNewsActions,\n\n  providers: [],\n\n  // 可选的依赖项\n  // dependencies: ['@elizaos/plugin-sql'],\n};\n\nexport default sosoNewsPlugin;",
    "import {\n  type Action,\n  type ActionResult,\n  type HandlerCallback,\n  type IAgentRuntime,\n  type Memory,\n  type State,\n  logger,\n} from \"@elizaos/core\";\nimport { z } from \"zod\";\n\n// SoSoValue API 数据模型\ninterface SosoCurrency {\n  currencyId: string;  // 注意：API 返回的是 currencyId，不是 id\n  fullName: string;\n  currencyName: string;  // 注意：API 返回的是 currencyName，不是 name\n}\n\ninterface SosoNewsItem {\n  id: string;\n  sourceLink: string;\n  releaseTime: number;\n  author: string;\n  category: number;\n  featureImage: string;\n  matchedCurrencies: Array<{\n    id: string;\n    fullName: string;\n    name: string;\n  }>;\n  tags: string[];\n  multilanguageContent: Array<{\n    language: string;\n    title: string;\n    content: string;\n  }>;\n}\n\ninterface SosoListResponse {\n  code: number;\n  msg: string | null;\n  data: SosoCurrency[];\n}\n\ninterface SosoNewsResponse {\n  code: number;\n  msg: string | null;\n  data: {\n    pageNum: string;\n    pageSize: string;\n    totalPages: string;\n    total: string;\n    list: SosoNewsItem[];\n  };\n}\n\n// SoSoValue API 客户端\nclass SosoValueClient {\n  private apiKey: string;\n  private baseUrl: string;\n  private agent: any;\n  private proxyUrl: string | null;\n\n  constructor(apiKey: string, baseUrl: string = \"https://openapi.sosovalue.com\") {\n    this.apiKey = apiKey;\n    this.baseUrl = baseUrl;\n\n    // 检查代理配置\n    this.proxyUrl = process.env.HTTPS_PROXY || process.env.https_proxy || null;\n    if (this.proxyUrl) {\n      logger.info(`Proxy configured: ${this.proxyUrl}`);\n    }\n  }\n\n  private async ensureProxyAgent(): Promise<void> {\n    if (this.proxyUrl && !this.agent) {\n      try {\n        const proxyAgentModule = await import(\"https-proxy-agent\");\n        const HttpsProxyAgent = proxyAgentModule.HttpsProxyAgent || proxyAgentModule.default;\n        if (HttpsProxyAgent) {\n          this.agent = new HttpsProxyAgent(this.proxyUrl);\n          logger.info(`HttpsProxyAgent initialized: ${this.proxyUrl}`);\n        } else {\n          logger.warn(`HttpsProxyAgent not available, requests will proceed without proxy`);\n          this.agent = null;\n        }\n      } catch (importError) {\n        logger.warn(`ProxyAgent not available, requests will proceed without proxy: ${importError.message}`);\n        this.agent = null;\n      }\n    }\n  }\n\n  private async makeRequest<T>(url: string, options: RequestInit = {}): Promise<T> {\n    // 确保代理 Agent 已初始化\n    await this.ensureProxyAgent();\n\n    const fetchOptions: RequestInit = {\n      ...options,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json, text/plain, */*\",\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\",\n        \"x-soso-api-key\": this.apiKey,\n        ...options.headers,\n      },\n    };\n\n    // 如果配置了代理，使用代理 agent\n    if (this.agent) {\n      fetchOptions.agent = this.agent;\n    }\n\n    const response = await fetch(url, fetchOptions);\n\n    if (!response.ok) {\n      throw new Error(`SoSoValue API request failed: ${response.status} ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * 获取所有支持的代币列表\n   */\n  async getAllCurrencies(): Promise<SosoCurrency[]> {\n    const url = `${this.baseUrl}/openapi/v1/data/default/coin/list`;\n\n    const response = await this.makeRequest<SosoListResponse>(url, {\n      method: \"POST\",\n      body: \"{}\",\n    });\n\n    if (response.code !== 0) {\n      throw new Error(`SoSoValue API error: ${response.msg || \"Unknown error\"}`);\n    }\n\n    return response.data;\n  }\n\n  /**\n   * 根据名称或符号搜索代币\n   */\n  async searchCurrency(query: string): Promise<SosoCurrency | null> {\n    const currencies = await this.getAllCurrencies();\n    const lowerQuery = query.toLowerCase();\n\n    // 精确匹配优先\n    let match = currencies.find(\n      (currency) =>\n        currency.currencyName.toLowerCase() === lowerQuery ||\n        currency.fullName.toLowerCase() === lowerQuery\n    );\n\n    // 模糊匹配\n    if (!match) {\n      match = currencies.find(\n        (currency) =>\n          currency.currencyName.toLowerCase().includes(lowerQuery) ||\n          currency.fullName.toLowerCase().includes(lowerQuery) ||\n          lowerQuery.includes(currency.currencyName.toLowerCase()) ||\n          lowerQuery.includes(currency.fullName.toLowerCase())\n      );\n    }\n\n    return match || null;\n  }\n\n  /**\n   * 获取指定代币的新闻\n   */\n  async getCurrencyNews(\n    currencyId: string,\n    pageNum: number = 1,\n    pageSize: number = 10,\n    categoryList: string = \"1,2,3,4,5,6,7,9,10\"\n  ): Promise<SosoNewsItem[]> {\n    // 根据 API 文档，使用正确的 URL 路径\n    const url = `${this.baseUrl}/api/v1/news/featured/currency?currencyId=${currencyId}&pageNum=${pageNum}&pageSize=${pageSize}&categoryList=${categoryList}`;\n\n    const response = await this.makeRequest<SosoNewsResponse>(url);\n\n    if (response.code !== 0) {\n      throw new Error(`SoSoValue API error: ${response.msg || \"Unknown error\"}`);\n    }\n\n    return response.data.list;\n  }\n}\n\n// 工具函数：格式化新闻输出\nfunction formatNewsOutput(news: SosoNewsItem[], currency: SosoCurrency): string {\n  if (news.length === 0) {\n    return `📰 暂时没有找到 ${currency.fullName} (${currency.currencyName}) 的相关新闻。`;\n  }\n\n  let output = `📈 ${currency.fullName} (${currency.currencyName.toUpperCase()}) 最新资讯：\\n\\n`;\n\n  news.forEach((item, index) => {\n    const englishContent = item.multilanguageContent.find(\n      (content) => content.language === \"en\"\n    );\n\n    if (englishContent) {\n      const publishDate = new Date(item.releaseTime).toLocaleDateString(\"zh-CN\");\n      const categoryNames = {\n        1: \"新闻\",\n        2: \"研究报告\",\n        3: \"机构动态\",\n        4: \"市场洞察\",\n        5: \"宏观新闻\",\n        6: \"宏观研究\",\n        7: \"官方推文\",\n        9: \"价格预警\",\n        10: \"链上数据\",\n      };\n\n      const categoryName = categoryNames[item.category] || \"其他\";\n\n      // 处理标题为空的情况，使用内容的前50个字符作为标题\n      let title = englishContent.title;\n      if (!title && englishContent.content) {\n        title = englishContent.content.substring(0, 50) + \"...\";\n      }\n      if (!title) {\n        title = \"无标题\";\n      }\n\n      output += `${index + 1}. **${title}**\\n`;\n      output += `   📅 ${publishDate} | 📁 ${categoryName}\\n`;\n\n      if (item.author) {\n        output += `   👤 ${item.author}\\n`;\n      }\n\n      if (item.tags && item.tags.length > 0) {\n        output += `   🏷️ ${item.tags.join(\", \")}\\n`;\n      }\n\n      output += `   🔗 [查看原文](${item.sourceLink})\\n\\n`;\n    }\n  });\n\n  return output;\n}\n\n// 工具函数：格式化代币信息\nfunction formatTokenOutput(token: SosoCurrency): string {\n  return `💎 代币信息：\\n**${token.fullName}** (${token.currencyName.toUpperCase()})\\n🆔 ID: ${token.currencyId}`;\n}\n\n/**\n * Action 1: 搜索代币ID\n */\nconst searchTokenIdAction: Action = {\n  name: \"SEARCH_TOKEN_ID\",\n  similes: [\"FIND_TOKEN\", \"TOKEN_SEARCH\", \"LOOKUP_TOKEN\", \"SEARCH_COIN\", \"查询代币\", \"代币ID\"],\n  description: \"Search for cryptocurrency ID by name or symbol using SoSoValue API\",\n\n  validate: async (\n    runtime: IAgentRuntime,\n    message: Memory,\n    _state: State | undefined\n  ): Promise<boolean> => {\n    // 检查是否配置了 SoSoValue API\n    const apiKey = runtime.getSetting(\"SOSO_API_KEY\");\n    if (!apiKey) {\n      logger.warn(\"SOSO_API_KEY not configured\");\n      return false;\n    }\n\n    // 验证是否包含代币查询意图\n    const text = message.content.text.toLowerCase();\n    const searchKeywords = [\n      \"id\", \"标识\", \"查询\", \"搜索\", \"找\", \"lookup\", \"search\", \"find\",\n      \"bitcoin\", \"btc\", \"ethereum\", \"eth\", \"solana\", \"sol\", \"dogecoin\", \"doge\"\n    ];\n\n    return searchKeywords.some(keyword => text.includes(keyword)) ||\n           /[a-z]{2,10}/i.test(text); // 匹配可能的代币符号\n  },\n\n  handler: async (\n    runtime: IAgentRuntime,\n    message: Memory,\n    _state: State | undefined,\n    _options: Record<string, unknown> = {},\n    callback?: HandlerCallback,\n    _responses?: Memory[]\n  ): Promise<ActionResult> => {\n    try {\n      const apiKey = runtime.getSetting(\"SOSO_API_KEY\");\n      const baseUrl = runtime.getSetting(\"SOSO_BASE_URL\") || \"https://openapi.sosovalue.com\";\n\n      const client = new SosoValueClient(apiKey, baseUrl);\n      const text = message.content.text;\n\n      // 提取代币名称\n      const tokenPatterns = [\n        /\\b(btc|bitcoin|eth|ethereum|sol|solana|doge|dogecoin|ada|cardano|dot|polkadot|bnb|binance|usdt|tether|usdc|circle|xrp|ripple)\\b/gi,\n        /\\b([A-Z]{2,10})\\s*(代币|token|coin)?\\b/gi,\n      ];\n\n      let searchQuery = \"\";\n      for (const pattern of tokenPatterns) {\n        const matches = text.match(pattern);\n        if (matches && matches.length > 0) {\n          searchQuery = matches[0];\n          break;\n        }\n      }\n\n      // 如果没有匹配到特定模式，尝试提取关键词\n      if (!searchQuery) {\n        const words = text.split(/\\s+/).filter(word => word.length > 1);\n        searchQuery = words[words.length - 1]; // 取最后一个词作为查询\n      }\n\n      if (!searchQuery) {\n        throw new Error(\"无法识别要查询的代币名称\");\n      }\n\n      logger.info(`Searching for token: ${searchQuery}`);\n\n      const token = await client.searchCurrency(searchQuery);\n\n      if (!token) {\n        // 尝试获取一些热门代币作为建议\n        const popularTokens = await client.getAllCurrencies();\n        const suggestions = popularTokens\n          .filter(t =>\n            t.currencyName.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            t.fullName.toLowerCase().includes(searchQuery.toLowerCase())\n          )\n          .slice(0, 5);\n\n        let response = `❌ 没有找到 \"${searchQuery}\" 对应的代币信息。`;\n\n        if (suggestions.length > 0) {\n          response += \"\\n\\n💡 您是不是想找：\\n\";\n          suggestions.forEach(suggestion => {\n            response += `- **${suggestion.fullName}** (${suggestion.currencyName.toUpperCase()})\\n`;\n          });\n        }\n\n        if (callback) {\n          await callback({\n            text: response,\n            actions: [\"SEARCH_TOKEN_ID\"],\n            source: message.content.source,\n          });\n        }\n\n        return {\n          text: response,\n          success: false,\n          data: {\n            query: searchQuery,\n            suggestions,\n          },\n        };\n      }\n\n      const response = formatTokenOutput(token);\n\n      if (callback) {\n        await callback({\n          text: response,\n          actions: [\"SEARCH_TOKEN_ID\"],\n          source: message.content.source,\n        });\n      }\n\n      return {\n        text: response,\n        success: true,\n        data: {\n          tokenId: token.currencyId,\n          tokenName: token.currencyName,\n          fullName: token.fullName,\n        },\n      };\n    } catch (error) {\n      logger.error(\"Error in SEARCH_TOKEN_ID action:\", error);\n      const errorMessage = `查询代币信息时出错：${error instanceof Error ? error.message : \"未知错误\"}`;\n\n      return {\n        text: errorMessage,\n        success: false,\n        error: error instanceof Error ? error : new Error(String(error)),\n      };\n    }\n  },\n\n  examples: [\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"Bitcoin 的代币ID是多少？\",\n        },\n      },\n      {\n        name: \"{{name2}}\",\n        content: {\n          text: \"💎 代币信息：\\n**Bitcoin** (BTC)\\n🆔 ID: 1673723677362319866\",\n          actions: [\"SEARCH_TOKEN_ID\"],\n        },\n      },\n    ],\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"查一下 SOL 的信息\",\n        },\n      },\n      {\n        name: \"{{name2}}\",\n        content: {\n          text: \"💎 代币信息：\\n**Solana** (sol)\\n🆔 ID: 1673723677362319870\",\n          actions: [\"SEARCH_TOKEN_ID\"],\n        },\n      },\n    ],\n  ],\n};\n\n/**\n * Action 2: 获取代币新闻\n */\nconst getTokenNewsAction: Action = {\n  name: \"GET_TOKEN_NEWS\",\n  similes: [\"TOKEN_NEWS\", \"CRYPTO_NEWS\", \"COIN_NEWS\", \"LATEST_NEWS\", \"新闻\", \"资讯\", \"最新消息\"],\n  description: \"Get latest news for a specific cryptocurrency using SoSoValue API\",\n\n  validate: async (\n    runtime: IAgentRuntime,\n    message: Memory,\n    _state: State | undefined\n  ): Promise<boolean> => {\n    // 检查是否配置了 SoSoValue API\n    const apiKey = runtime.getSetting(\"SOSO_API_KEY\");\n    if (!apiKey) {\n      logger.warn(\"SOSO_API_KEY not configured\");\n      return false;\n    }\n\n    // 验证是否包含新闻查询意图\n    const text = message.content.text.toLowerCase();\n    const newsKeywords = [\n      \"新闻\", \"资讯\", \"消息\", \"动态\", \"最新\", \"news\", \"update\", \"latest\",\n      \"what\", \"how\", \"怎么样\", \"如何\", \"什么\", \"最新情况\"\n    ];\n\n    // 同时检查是否包含代币名称\n    const tokenKeywords = [\n      \"bitcoin\", \"btc\", \"ethereum\", \"eth\", \"solana\", \"sol\", \"dogecoin\", \"doge\",\n      \"ada\", \"cardano\", \"dot\", \"polkadot\", \"bnb\", \"binance\", \"usdt\", \"tether\"\n    ];\n\n    return newsKeywords.some(keyword => text.includes(keyword)) ||\n           tokenKeywords.some(keyword => text.includes(keyword));\n  },\n\n  handler: async (\n    runtime: IAgentRuntime,\n    message: Memory,\n    _state: State | undefined,\n    _options: Record<string, unknown> = {},\n    callback?: HandlerCallback,\n    _responses?: Memory[]\n  ): Promise<ActionResult> => {\n    try {\n      const apiKey = runtime.getSetting(\"SOSO_API_KEY\");\n      const baseUrl = runtime.getSetting(\"SOSO_BASE_URL\") || \"https://openapi.sosovalue.com\";\n\n      const client = new SosoValueClient(apiKey, baseUrl);\n      const text = message.content.text;\n\n      // 提取代币名称（与搜索 Action 相同的逻辑）\n      const tokenPatterns = [\n        /\\b(btc|bitcoin|eth|ethereum|sol|solana|doge|dogecoin|ada|cardano|dot|polkadot|bnb|binance|usdt|tether|usdc|circle|xrp|ripple)\\b/gi,\n        /\\b([A-Z]{2,10})\\s*(代币|token|coin)?\\b/gi,\n      ];\n\n      let searchQuery = \"\";\n      for (const pattern of tokenPatterns) {\n        const matches = text.match(pattern);\n        if (matches && matches.length > 0) {\n          searchQuery = matches[0];\n          break;\n        }\n      }\n\n      // 如果没有明确指定代币，尝试从上下文中推断\n      if (!searchQuery) {\n        const words = text.split(/\\s+/).filter(word => word.length > 1);\n        searchQuery = words[words.length - 1];\n      }\n\n      if (!searchQuery) {\n        throw new Error(\"请指定要查询哪个代币的新闻\");\n      }\n\n      logger.info(`Getting news for token: ${searchQuery}`);\n\n      // 先搜索代币获取ID\n      const token = await client.searchCurrency(searchQuery);\n      if (!token) {\n        const response = `❌ 没有找到 \"${searchQuery}\" 对应的代币，无法获取新闻。`;\n\n        if (callback) {\n          await callback({\n            text: response,\n            actions: [\"GET_TOKEN_NEWS\"],\n            source: message.content.source,\n          });\n        }\n\n        return {\n          text: response,\n          success: false,\n          data: { query: searchQuery },\n        };\n      }\n\n      // 获取代币新闻\n      const news = await client.getCurrencyNews(token.currencyId, 1, 5); // 获取最新5条新闻\n      const response = formatNewsOutput(news, token);\n\n      if (callback) {\n        await callback({\n          text: response,\n          actions: [\"GET_TOKEN_NEWS\"],\n          source: message.content.source,\n        });\n      }\n\n      return {\n        text: response,\n        success: true,\n        data: {\n          tokenId: token.currencyId,\n          tokenName: token.currencyName,\n          fullName: token.fullName,\n          newsCount: news.length,\n          news,\n        },\n      };\n    } catch (error) {\n      logger.error(\"Error in GET_TOKEN_NEWS action:\", error);\n      const errorMessage = `获取代币新闻时出错：${error instanceof Error ? error.message : \"未知错误\"}`;\n\n      return {\n        text: errorMessage,\n        success: false,\n        error: error instanceof Error ? error : new Error(String(error)),\n      };\n    }\n  },\n\n  examples: [\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"Bitcoin 有什么最新新闻？\",\n        },\n      },\n      {\n        name: \"{{name2}}\",\n        content: {\n          text: \"📈 Bitcoin (BTC) 最新资讯：\\n\\n1. **比特币ETF获批**\\n   📅 2024-10-25 | 📁 新闻\\n   👤 Reuters\\n   🏷️ ETF, SEC, 批准\\n   🔗 [查看原文](https://example.com)\\n\",\n          actions: [\"GET_TOKEN_NEWS\"],\n        },\n      },\n    ],\n    [\n      {\n        name: \"{{name1}}\",\n        content: {\n          text: \"SOL 最近怎么样？\",\n        },\n      },\n      {\n        name: \"{{name2}}\",\n        content: {\n          text: \"📈 Solana (sol) 最新资讯：\\n\\n1. **Solana网络升级成功**\\n   📅 2024-10-24 | 📁 技术更新\\n   👤 Solana Foundation\\n   🔗 [查看原文](https://example.com)\\n\",\n          actions: [\"GET_TOKEN_NEWS\"],\n        },\n      },\n    ],\n  ],\n};\n\n/**\n * 导出 Action 供其他模块使用\n */\nexport { searchTokenIdAction, getTokenNewsAction, SosoValueClient, formatNewsOutput };\nexport const sosoNewsActions = [searchTokenIdAction, getTokenNewsAction];\n"
  ],
  "mappings": "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",
  "debugId": "259AF038B6E4468E64756E2164756E21",
  "names": []
}